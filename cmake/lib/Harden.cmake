if(CMAKE_CXX_COMPILER_ID MATCHES ".*Clang|GNU")
    target_compile_options(myproject_options INTERFACE -D_GLIBCXX_ASSERTIONS)
    message(STATUS "GLIBC++ Assertions (vector[], string[], ...) enabled")

    check_cxx_compiler_flag(-fstack-protector-strong STACK_PROTECTOR)
    if(STACK_PROTECTOR)
        target_compile_options(myproject_options INTERFACE -fstack-protector-strong)
        message(STATUS "-fstack-protector-strong enabled")
    else()
        message(STATUS "-fstack-protector-strong NOT enabled (not supported)")
    endif()
    check_cxx_compiler_flag(-fcf-protection CF_PROTECTION)
    if(CF_PROTECTION)
        target_compile_options(myproject_options INTERFACE -fcf-protection)
        message(STATUS "-fcf-protection enabled")
    else()
        message(STATUS "-fcf-protection NOT enabled (not supported)")
    endif()
    check_cxx_compiler_flag(-fstack-clash-protection CLASH_PROTECTION)
    if(CLASH_PROTECTION)
        if(LINUX OR CMAKE_CXX_COMPILER_ID MATCHES "GNU")
            target_compile_options(myproject_options INTERFACE -fstack-clash-protection)
            message(STATUS "-fstack-clash-protection enabled")
        else()
            message(STATUS "-fstack-clash-protection NOT enabled (clang on non-Linux)")
        endif()
    else()
        message(STATUS "-fstack-clash-protection NOT enabled (not supported)")
    endif()
endif()