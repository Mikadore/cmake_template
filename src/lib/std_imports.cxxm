module;
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <source_location>
#include <string_view>
export module std_imports;

export using u8	 = std::uint8_t;
export using u16 = std::uint16_t;
export using u32 = std::uint32_t;
export using u64 = std::uint64_t;

export using usize = std::size_t;

export using i8	 = std::int8_t;
export using i16 = std::int16_t;
export using i32 = std::int32_t;
export using i64 = std::int64_t;

export using isize = std::ptrdiff_t;

export namespace util {
    auto assert(bool condition, std::string_view message,
    	   const std::source_location location = std::source_location::current())
    	-> void {
    	if (!condition) {
    		std::printf("%s/%s:%u assertion failed: %s\n", location.file_name(), location.function_name(), location.line(), message.data());
            std::abort();
    	}
    }
}